blueprint:
  name: Occupancy Controlled Device
  description: Automates entities based on occupancy and daylight sensors
  domain: automation
  homeassistant:
    min_version: "2024.8.0"
  input:
    occupancy_sensor:
      name: Occupancy Sensor
      description: The sensor detecting occupancy
      selector:
        entity:
          filter:
            domain: binary_sensor
            device_class: occupancy
    daylight_sensor:
      name: Daylight Sensor
      description: The sensor detecting daylight
      selector:
        entity:
          filter:
            domain: binary_sensor
            device_class: light
      default: ""
    default_scene_occupied:
      name: Default Scene (Occupied)
      description: The scene to activate when occupancy is detected
      selector:
        entity:
          filter:
            domain: scene
    off_delay_duration:
      name: Off Delay
      description: >
        The duration of time to delay before turning off the targets after 
        unoccupied.
      selector:
        duration:
      default:
        hours: 0
        minutes: 2
        seconds: 0

variables:
  # save in variable so that it can be used in templates
  default_scene_occupied: !input default_scene_occupied
  target_entities: "{{ state_attr(default_scene_occupied, 'entity_id') | list }}"
  daylight_sensor: !input daylight_sensor

triggers:
  - id: "daylight_light_detected"
    trigger: state
    entity_id: !input daylight_sensor
    to: "on"
  - id: "daylight_no_light_detected"
    trigger: state
    entity_id: !input daylight_sensor
    to: "off"
  - id: "occupancy_cleared"
    trigger: state
    entity_id: !input occupancy_sensor
    from: "on"
    to: "off"
    for: !input off_delay_duration
  - id: "occupancy_detected"
    trigger: state
    entity_id: !input occupancy_sensor
    from: "off"
    to: "on"

action:
  - choose:
      # activate default scene on occupancy
      - conditions:
          - condition: trigger
            id:
              - "occupancy_detected"
              - "daylight_no_light_detected"
          - condition: state
            entity_id: !input daylight_sensor
            state: "off"
        sequence:
          - action: scene.turn_on
            data: {}
            target:
              entity_id: !input default_scene_occupied

      # turn off when no occupancy for duration
      - conditions:
          - condition: trigger
            id:
              - "occupancy_cleared"
              - "daylight_light_detected"
        sequence:
          - action: homeassistant.turn_off
            target:
              entity_id: "{{ target_entities }}"
